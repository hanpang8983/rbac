<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
        <property name="url" value="jdbc:mysql://127.0.0.1:3308/ly24_rbac"></property>
        <property name="username" value="root"></property>
        <property name="password" value="mysql"></property>
	</bean>
	<!-- 为什么一定要取这个名字? -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
       <property name="dataSource" ref="dataSource"></property>
       <property name="mappingLocations">
            <list>
                <value>classpath*:com/shxt/framework/**/model/*.hbm.xml</value>
            </list>
       </property>
       <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
       </property>
    </bean>
    <!-- 配置事务管理器Spring提供 -->
    <bean id="transactionManager"
            class="org.springframework.orm.hibernate3.HibernateTransactionManager">
      <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <!-- 
        第一个* 代表返回任意的结果类型
        第二个* 代表该包下的所有类
        第三个* 代表该类下的所有方法
        第四个.. 代表方法中有任意个参数
     -->
    <aop:config>
        <aop:pointcut id="productServiceMethods"
                expression="execution(* com.shxt.framework..service.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="productServiceMethods"/>
    </aop:config>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!-- 定义规则 -->
        <tx:attributes>
            <!-- 所有的方法都是只读，没有事务的提交 -->
            <tx:method name="*"  read-only="true"/>
            <!-- 排除方法 -->
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="mod*" propagation="REQUIRED"/>
            <tx:method name="change*" propagation="REQUIRED"/>
            <tx:method name="del*" propagation="REQUIRED"/>
            <tx:method name="remove*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>
    

    <!-- 配置BaseDao -->
    <bean id="baseDaoImpl" class="com.shxt.base.dao.BaseDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    
    <!-- 用户管理配置 -->
    <bean id="userServiceImpl" class="com.shxt.framework.user.service.UserServiceImpl">
        <property name="baseDao" ref="baseDaoImpl"/>
    </bean>
    <bean id="userAction" class="com.shxt.framework.user.action.UserAction" scope="prototype">
        <property name="userService" ref="userServiceImpl"/>
        <property name="roleService" ref="roleServiceImpl"/>
    </bean>
    
    <!-- 角色管理配置 -->
    <bean id="roleServiceImpl" class="com.shxt.framework.role.service.RoleServiceImpl">
        <property name="baseDao" ref="baseDaoImpl"></property>
    </bean>
    <bean id="roleAction" class="com.shxt.framework.role.action.RoleAction" scope="prototype">
        <property name="roleService" ref="roleServiceImpl"></property>
        <property name="menuService" ref="menuServiceImpl"></property>
    </bean>
    
    <!-- 菜单管理配置 -->
    <bean id="menuServiceImpl" class="com.shxt.framework.menu.service.MenuServiceImpl">
        <property name="baseDao" ref="baseDaoImpl"></property>
    </bean>
    <bean id="menuAction" class="com.shxt.framework.menu.action.MenuAction" scope="prototype">
        <property name="menuService" ref="menuServiceImpl"></property>
    </bean>
    
    <!-- 登录配置 -->
    <bean id="loginAction" class="com.shxt.framework.login.action.LoginAction" scope="prototype">
        <property name="userService" ref="userServiceImpl"></property>
    </bean>
</beans>
